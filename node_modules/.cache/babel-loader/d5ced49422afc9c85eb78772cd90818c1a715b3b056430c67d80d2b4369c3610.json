{"ast":null,"code":"import Header_View from './components/Header_View.vue';\nimport Tasks_View from './components/Tasks_View.vue';\nimport Add_Task_View from './components/AddTask_View.vue';\nexport default {\n  name: 'App',\n  components: {\n    Header_View,\n    Tasks_View,\n    Add_Task_View\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false\n    };\n  },\n  methods: {\n    async deleteTask(id) {\n      console.log('Delete Task', id);\n      if (confirm('You sure you want to Delete the Task')) {\n        const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json'\n          }\n        });\n        response.status === 200 ? this.tasks = this.tasks.filter(task => task.id !== id) : alert('Unable to delete');\n      }\n    },\n    async toggleReminder(id) {\n      console.log('Toggle Reminder', id);\n      const taskToToggle = this.fetchTask(id);\n      const updateTask = {\n        ...taskToToggle,\n        reminder: !task.reminder\n      };\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'UPD',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n      response.status === 200 ? this.tasks = this.tasks.filter(task => task.id !== id) : alert('Unable to delete');\n      this.tasks = this.tasks.map(task => task.id === id ? {\n        ...task,\n        reminder: !task.reminder\n      } : task);\n    },\n    async addTask(task) {\n      const response = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n      const data = await response.json();\n      console.log('add task res', data);\n      this.tasks = [...this.tasks, task];\n    },\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    async fetchTasks() {\n      const response = await fetch('http://localhost:5000/tasks');\n      const data = await response.json();\n      return data;\n    },\n    async fetchTask(id) {\n      console.log('task', id);\n      const response = await fetch(`http://localhost:5000/tasks/${id}`);\n      const data = await response.json();\n      return data;\n    }\n  },\n  async created() {\n    // this.tasks = [\n    //   {\n    //     id: 1,\n    //     text: 'Doctor Appointment',\n    //     day: 'March 1st at 10.00 AM',\n    //     reminder: true\n    //   },\n    //   {\n    //     id: 2,\n    //     text: 'Play Cricket',\n    //     day: 'March 1st at 05.00 PM',\n    //     reminder: false\n    //   },\n    //   {\n    //     id: 3,\n    //     text: 'Go to MacD',\n    //     day: 'March 1st at 09.00 PM',\n    //     reminder: true\n    //   }\n\n    // ]\n    this.tasks = await this.fetchTasks();\n  }\n};","map":{"version":3,"names":["Header_View","Tasks_View","Add_Task_View","name","components","data","tasks","showAddTask","methods","deleteTask","id","console","log","confirm","response","fetch","method","headers","status","filter","task","alert","toggleReminder","taskToToggle","fetchTask","updateTask","reminder","map","addTask","body","JSON","stringify","json","toggleAddTask","fetchTasks","created"],"sources":["/Users/viraj.jage/Desktop/learning/vue-crash-app/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Header_View @toggle-add-task=\"toggleAddTask\" title=\"Task Tracker\" :showAddTask=showAddTask />\n    <div v-show=\"showAddTask\">\n      <Add_Task_View @add-task=\"addTask\" />\n    </div>\n    <Tasks_View @toggle-reminder=\"toggleReminder\" @delete-task='deleteTask' :tasks=\"tasks\" />\n  </div>\n</template>\n\n<script>\n\nimport Header_View from './components/Header_View.vue';\nimport Tasks_View from './components/Tasks_View.vue';\nimport Add_Task_View from './components/AddTask_View.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Header_View,\n    Tasks_View,\n    Add_Task_View\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false\n    }\n  },\n  methods: {\n    async deleteTask(id) {\n      console.log('Delete Task', id)\n      if (confirm('You sure you want to Delete the Task')) {\n        const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json',\n          }\n        })\n        response.status === 200 ?\n          (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Unable to delete')\n      }\n    },\n    async toggleReminder(id) {\n      console.log('Toggle Reminder', id)\n      const taskToToggle = this.fetchTask(id)\n      const updateTask = {...taskToToggle, reminder: !task.reminder}\n\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'UPD',\n          headers: {\n            'Content-type': 'application/json',\n          }\n        })\n        response.status === 200 ?\n          (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Unable to delete')\n\n      this.tasks = this.tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task)\n    },\n    async addTask(task) {\n      const response = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task)\n      })\n      const data = await response.json()\n      console.log('add task res', data)\n\n      this.tasks = [...this.tasks, task]\n    },\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask\n    },\n    async fetchTasks() {\n      const response = await fetch('http://localhost:5000/tasks')\n      const data = await response.json()\n      return data\n    },\n    async fetchTask(id) {\n      console.log('task', id)\n      const response = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await response.json()\n      return data\n    }\n  },\n  async created() {\n    // this.tasks = [\n    //   {\n    //     id: 1,\n    //     text: 'Doctor Appointment',\n    //     day: 'March 1st at 10.00 AM',\n    //     reminder: true\n    //   },\n    //   {\n    //     id: 2,\n    //     text: 'Play Cricket',\n    //     day: 'March 1st at 05.00 PM',\n    //     reminder: false\n    //   },\n    //   {\n    //     id: 3,\n    //     text: 'Go to MacD',\n    //     day: 'March 1st at 09.00 PM',\n    //     reminder: true\n    //   }\n\n    // ]\n    this.tasks = await this.fetchTasks()\n  },\n\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n\n.btn:focus {\n  outline: none;\n}\n\n.btn:active {\n  transform: scale(0.98);\n}\n\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}