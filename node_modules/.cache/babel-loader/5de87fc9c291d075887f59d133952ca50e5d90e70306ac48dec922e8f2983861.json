{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Add_Task_View = _resolveComponent(\"Add_Task_View\");\n  const _component_Tasks_View = _resolveComponent(\"Tasks_View\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"div\", null, [_createVNode(_component_Add_Task_View, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"])], 512 /* NEED_PATCH */), [[_vShow, $props.showAddTask]]), _createVNode(_component_Tasks_View, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_Add_Task_View","onAddTask","$options","addTask","$props","showAddTask","_component_Tasks_View","onToggleReminder","toggleReminder","onDeleteTask","deleteTask","tasks","$data"],"sources":["/Users/viraj.jage/Desktop/learning/vue-crash-app/src/views/Home_View.vue"],"sourcesContent":["<template>\n    <div v-show=\"showAddTask\">\n        <Add_Task_View @add-task=\"addTask\" />\n    </div>\n    <Tasks_View @toggle-reminder=\"toggleReminder\" @delete-task='deleteTask' :tasks=\"tasks\" />\n</template>\n\n<script>\nimport Tasks_View from './components/Tasks_View.vue';\nimport Add_Task_View from './components/AddTask_View.vue'\n\nexport default {\n    name: 'Home_View',\n    props: {\n        showAddTask: Boolean\n    },\n    components: {\n        Tasks_View,\n        Add_Task_View,\n    },\n    data() {\n        return {\n            tasks: [],\n        }\n    },\n    methods: {\n    async deleteTask(id) {\n      console.log('Delete Task', id)\n      if (confirm('You sure you want to Delete the Task')) {\n        const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json',\n          }\n        })\n        response.status === 200 ?\n          (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Unable to delete')\n      }\n    },\n    async toggleReminder(id) {\n      console.log('Toggle Reminder', id)\n      const taskToToggle = await this.fetchTask(id)\n      //const updateTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n      taskToToggle.reminder = !taskToToggle.reminder\n\n      console.log('Updated Task',JSON.stringify(taskToToggle))\n\n      const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(taskToToggle)\n      })\n\n  \n    \n\n      const data = await response.json()\n\n      this.tasks = this.tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task)\n      // response.status === 200 ?\n      //   (this.tasks = this.tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n      //   : alert('Unable to update the task')\n    },\n    async addTask(task) {\n      const response = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task)\n      })\n      const data = await response.json()\n      console.log('add task res', data)\n\n      this.tasks = [...this.tasks, task]\n    },\n    async fetchTasks() {\n      const response = await fetch('http://localhost:5000/tasks')\n      const data = await response.json()\n      return data\n    },\n    async fetchTask(id) {\n      console.log('task', id)\n      const response = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await response.json()\n      console.log('single task res', data)\n      return data\n    }\n  },\n  async created() {\n    // this.tasks = [\n    //   {\n    //     id: 1,\n    //     text: 'Doctor Appointment',\n    //     day: 'March 1st at 10.00 AM',\n    //     reminder: true\n    //   },\n    //   {\n    //     id: 2,\n    //     text: 'Play Cricket',\n    //     day: 'March 1st at 05.00 PM',\n    //     reminder: false\n    //   },\n    //   {\n    //     id: 3,\n    //     text: 'Go to MacD',\n    //     day: 'March 1st at 09.00 PM',\n    //     reminder: true\n    //   }\n\n    // ]\n    this.tasks = await this.fetchTasks()\n  },\n}\n</script>"],"mappings":";;;;6EACIA,mBAAA,CAEM,cADFC,YAAA,CAAqCC,wBAAA;IAArBC,SAAQ,EAAEC,QAAA,CAAAC;EAAO,uC,mCADxBC,MAAA,CAAAC,WAAW,E,GAGxBN,YAAA,CAAyFO,qBAAA;IAA5EC,gBAAe,EAAEL,QAAA,CAAAM,cAAc;IAAGC,YAAW,EAAEP,QAAA,CAAAQ,UAAU;IAAGC,KAAK,EAAEC,KAAA,CAAAD"},"metadata":{},"sourceType":"module","externalDependencies":[]}